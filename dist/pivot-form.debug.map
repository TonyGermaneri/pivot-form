{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap da98f73a3bd5c7bb14e1","webpack:///./lib/util.js","webpack:///./lib/index.js","webpack:///./lib/components/index.js","webpack:///./lib/dialog.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAA0D,EAAE;AAC/F,oCAAoC,0CAA0C,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA,uEAAuE,QAAQ;AAC/E;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;;;;;;;;;;;;ACtFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,sDAAsD,wBAAwB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAiD;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,4BAA4B;AAC7F;AACA,6CAA6C,8CAA8C;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,+EAA+E,QAAQ;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uHAAuH;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mCAAmC,QAAQ;AAC3C,qEAAqE,aAAa;AAClF;AACA;AACA;AACA,qGAAqG;AACrG,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kCAAkC,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,aAAa;AAC3C,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uCAAuC;AACvC;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;;;;;;;;;;;;AC1nBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,uDAAuD;AACrH,+DAA+D,mBAAmB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,kCAAkC;AACvF,KAAK;AACL;AACA;AACA,0DAA0D,uBAAuB;AACjF,2DAA2D,mBAAmB;AAC9E,6DAA6D,oBAAoB;AACjF;AACA;AACA;AACA;AACA;AACA,2CAA2C,qBAAqB;AAChE,8DAA8D,mCAAmC;AACjG;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+BAA+B,oFAAoF;AACnH;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,mCAAmC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB,EAAE;AACzD;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yDAAyD,8BAA8B;AACvF,kEAAkE,kBAAkB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C,+CAA+C,oBAAoB,EAAE;AACrE,SAAS;AACT,2CAA2C,8BAA8B,EAAE;AAC3E;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AAAA;;;;;;;;;;;;ACvPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC,iCAAiC,QAAQ;AACzC,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,6CAA6C,8BAA8B;AAC3E,oDAAoD,wDAAwD;AAC5G,4CAA4C,4BAA4B;AACxE,yCAAyC,yBAAyB;AAClE,uDAAuD,6BAA6B;AACpF,uDAAuD,6BAA6B;AACpF,6DAA6D,0BAA0B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA","file":"pivot-form.debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pivot-form\"] = factory();\n\telse\n\t\troot[\"pivot-form\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap da98f73a3bd5c7bb14e1","/*jslint browser: true, unparam: true, todo: true, evil: true*/\n/*globals define: false, Event: false*/\ndefine([], function () {\n    'use strict';\n    return {\n        varSafe: function (value) { return value.replace(/[^a-zA-Z0-9]/g, '_').toLowerCase(); },\n        jsonCopy: function (value) { return JSON.parse(JSON.stringify(value)); },\n        addEventInterface: function (component, header, index, data, intf) {\n            component.events = {};\n            component.addEventListener = function (ev, fn) {\n                component.events[ev] = component.events[ev] || [];\n                component.events[ev].unshift(fn);\n            };\n            component.removeEventListener = function (ev, fn) {\n                (component.events[ev] || []).forEach(function removeEachListener(sfn, idx) {\n                    if (fn === sfn) {\n                        component.events[ev].splice(idx, 1);\n                    }\n                });\n            };\n            component.dispatchEvent = function (ev, e) {\n                e = ev.type ? ev : (e || {});\n                ev = ev.type || ev;\n                var defaultPrevented;\n                function preventDefault() {\n                    defaultPrevented = true;\n                }\n                if (!component.events[ev]) { return; }\n                component.events[ev].forEach(function dispatchEachEvent(fn) {\n                    e.preventDefault = preventDefault;\n                    fn.apply(component, [e, component, header, index, data, intf]);\n                });\n                return defaultPrevented;\n            };\n        },\n        setProperties: function (root, props) {\n            if (typeof props !== 'object' || props === null || !root) { return; }\n            Object.keys(props).forEach(function (keyName) {\n                root[keyName] = props[keyName];\n            });\n        },\n        addEvents: function (el, events) {\n            if (events && typeof events === 'object' && events !== null) {\n                Object.keys(events).forEach(function (eKey) {\n                    el.addEventListener(eKey, events[eKey]);\n                });\n            }\n        },\n        createElement: function createElement(tag, parentNode, attributes) {\n            var el = document.createElement(tag);\n            if (attributes) {\n                Object.keys(attributes).forEach(function (attrKey) {\n                    var value = attributes[attrKey];\n                    if (attrKey === 'value') {\n                        el.value = value;\n                        return;\n                    }\n                    if (attrKey === 'className') {\n                        el.className = value;\n                        return;\n                    }\n                    if (attrKey === 'style') {\n                        Object.keys(attributes.style).forEach(function (cKey) {\n                            el.style[cKey] = attributes.style[cKey];\n                        });\n                        return;\n                    }\n                    if (attrKey === 'events') {\n                        Object.keys(attributes.events).forEach(function (eKey) {\n                            el.addEventListener(eKey, attributes.events[eKey]);\n                        });\n                        return;\n                    }\n                    if (attrKey === 'innerHTML') {\n                        el.innerHTML = value;\n                        return;\n                    }\n                    el.setAttribute(attrKey, value);\n                });\n            }\n            if (parentNode) {\n                parentNode.appendChild(el);\n            }\n            return el;\n        }\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 0\n// module chunks = 0","/*jslint browser: true, unparam: true, todo: true, evil: true*/\n/*globals define: false, performance: false, requestAnimationFrame: false, Event: false*/\ndefine(['./components/index.js', './util.js', './dialog.js'], function (defaultComponents, util, dialog) {\n    'use strict';\n    var attributeList = ['data', 'schema', 'name', 'components'];\n    function PivotForm(args) {\n        args = args || {};\n        // only non-dom related items can be instantiated prior to init (connectedCallback)\n        var self = {}, intf;\n        self.args = args;\n        self.initialized = false;\n        self.form = util.createElement('form', null, {className: 'pivot-form'});\n        self.uniqueId = Math.random() + '-' + performance.now();\n        self.title = '';\n        self.componentOrder = [];\n        self.initializingComponents = {};\n        // represents data input via data setter prior to async init values completed\n        self.preInitData = {};\n        self.components = [];\n        self.idCounter = -1;\n        self.data = {};\n        self.childForms = [];\n        self.dialogOptions = {};\n        intf = window.customElements ? eval('Reflect.construct(HTMLElement, [], new.target)')\n            : util.createElement('section');\n        function getNewId() {\n            self.idCounter += 1;\n            return 'p' + Math.floor((Math.random() * Math.pow(2, 30))).toString(36);\n        }\n        function getComponentsByPropertyValue(key, value) {\n            var found = [];\n            self.childForms.forEach(function (form) {\n                found = found.concat(form.getComponentsByPropertyValue(key, value));\n            });\n            self.components.forEach(function (component) {\n                if (component && component.isContainer) {\n                    // this list of components will be in the above child forms\n                    return;\n                }\n                if (value === component[key] || (component.header && value === component.header[key])) {\n                    found.push(component);\n                }\n            });\n            return found;\n        }\n        function getComponentByName(value) {\n            return getComponentsByPropertyValue('name', value)[0];\n        }\n        function getComponentById(value) {\n            return getComponentsByPropertyValue('id', value)[0];\n        }\n        function setPreInitData() {\n            if (!self.initialized) { return; }\n            if (Object.keys(self.preInitData).length > 0) {\n                intf.data = self.preInitData;\n            }\n        }\n        function saveState() {\n            if (self.name) {\n                try {\n                    localStorage.setItem('pivot-form-order-' + self.name, JSON.stringify({\n                        componentOrder: self.componentOrder\n                    }));\n                } catch (ignore) {\n                    self.componentOrder = [];\n                }\n            }\n        }\n        function updateFlexOrder() {\n            self.inputComponentOrganicOrder.forEach(function (itemContainer, organicComponentIndex) {\n                organicComponentIndex += 1;\n                itemContainer.style.order = self.componentOrder.indexOf(organicComponentIndex);\n            });\n            saveState();\n        }\n        function loadState() {\n            if (self.name && intf.initialized) {\n                try {\n                    var d = localStorage.getItem('pivot-form-order-' + self.name);\n                    d = self.componentOrder = JSON.parse(d).componentOrder;\n                } catch (ignore) {\n                    self.componentOrder = [];\n                }\n                updateFlexOrder();\n            }\n        }\n        function reorderComponents(e) {\n            // move up e until a base component item is found, then draw a line below it\n            // and mark it as the target of the dropping (item reordering)\n            self.moveMarker.style.left = e.layerX + 'px';\n            self.moveMarker.style.top = e.layerY + 'px';\n            var tOrd, uid, el = e.target;\n            while (el && el.parentNode && el.tagName !== 'BODY') {\n                tOrd = parseInt(self.moveFrom.style.order, 10);\n                uid = el.getAttribute('data-uniqueId');\n                if (uid === self.uniqueId && el !== self.moveFrom) {\n                    if (self.moveTo) {\n                        self.moveTo.classList.remove('reorder-drag-over');\n                    }\n                    self.moveTo = el;\n                    self.moveTo.classList.add('reorder-drag-over');\n                    self.moveTargetIndex = parseInt(tOrd, 10);\n                    return;\n                }\n                el = el.parentNode;\n            }\n            return;\n        }\n        function endReorderComponents() {\n            function reorder() {\n                if (!self.moveTo) { return; }\n                var o = self.componentOrder.indexOf(self.moveFrom.organicComponentIndex),\n                    t = self.componentOrder.indexOf(self.moveTo.organicComponentIndex);\n                self.componentOrder.splice(o, 1);\n                self.componentOrder.splice(t, 0, self.moveFrom.organicComponentIndex);\n                updateFlexOrder();\n                return;\n            }\n            if (self.moveTo) {\n                self.moveTo.classList.remove('reorder-drag-over');\n            }\n            reorder();\n            if (self.moveMarker.parentNode) {\n                self.moveMarker.parentNode.removeChild(self.moveMarker);\n            }\n            self.form.classList.remove('noselect');\n            self.moveTo = undefined;\n            self.moveFrom = undefined;\n            self.moveMarker = undefined;\n            self.shadowRoot.removeEventListener('mousemove', reorderComponents);\n            self.shadowRoot.removeEventListener('mouseup', endReorderComponents);\n            return;\n        }\n        function beginReorderComponent(organicComponentIndex, itemContainer) {\n            return function (e) {\n                self.form.classList.add('noselect');\n                self.moveMarker = util.createElement('div', self.shadowRoot,\n                        {className: 'reorder-marker', innerHTML: '\\u205E'});\n                self.moveFrom = itemContainer;\n                self.moveStart = {\n                    item: itemContainer.getBoundingClientRect(),\n                    clientX: e.clientX,\n                    clientY: e.clientY\n                };\n                reorderComponents(e);\n                self.shadowRoot.addEventListener('mousemove', reorderComponents);\n                self.shadowRoot.addEventListener('mouseup', endReorderComponents);\n            };\n        }\n        function resize() {\n            self.components.forEach(function (component) {\n                if (component.resize && typeof component.resize === 'function') {\n                    component.resize();\n                }\n                if (component.dispatchEvent) {\n                    component.dispatchEvent(new Event('resize'));\n                }\n            });\n            window.dispatchEvent(new Event('resize'));\n        }\n        function doneInitializing() {\n            if (Object.keys(self.initializingComponents).length === 0) {\n                // notify that everything has been initialized on this form\n                intf.classList.remove('loading');\n                intf.dispatchEvent(new Event('initialized'));\n                self.initialized = true;\n            }\n        }\n        function createDom() {\n            self.components.forEach(function (component, organicComponentIndex) {\n                organicComponentIndex += 1;\n                var container = util.createElement('div', null, {className: 'component-item'}),\n                    handle = util.createElement('span', component.header.static\n                        ? null : container, {className: 'item-handle', innerHTML: '\\u205E'}),\n                    dataStub = {};\n                if (component.header.hidden) {\n                    container.style.display = 'none';\n                }\n                function initialized() {\n                    component.removeEventListener('initialized', initialized);\n                    delete self.initializingComponents[component.id];\n                    doneInitializing();\n                    setPreInitData();\n                }\n                component.container = container;\n                component.handle = handle;\n                container.setAttribute('data-uniqueId', self.uniqueId);\n                handle.beginReorderComponentFunction = beginReorderComponent(organicComponentIndex, container);\n                handle.addEventListener('mousedown', handle.beginReorderComponentFunction);\n                container.organicComponentIndex = organicComponentIndex;\n                container.name = component.name;\n                self.componentOrder[organicComponentIndex] = self.componentOrder[organicComponentIndex] === undefined\n                    ? organicComponentIndex : self.componentOrder[organicComponentIndex];\n                container.appendChild(component);\n                util.setProperties(container.style, component.containerStyle);\n                util.setProperties(handle, component.handleStyle);\n                util.setProperties(container.style, component.containerStyle);\n                util.setProperties(handle, component.handleStyle);\n                self.form.appendChild(container);\n                self.inputComponentOrganicOrder.push(container);\n                // a value was defined in the schema as a default\n                // assume this is an async function and delay loading of data via data setter\n                // by adding items to self.initializingComponents\n                if (!component.initialzied && component.header.name && component.header.value) {\n                    dataStub[component.header.name] = component.header.value;\n                    self.initializingComponents[component.id] = component;\n                    component.addEventListener('initialized', initialized);\n                    component.value = dataStub;\n                }\n            });\n            updateFlexOrder();\n        }\n        function initData(newData) {\n            function componentDataSetter(component) {\n                component.value = newData;\n            }\n            self.components.forEach(componentDataSetter);\n            self.childForms.forEach(function (form) {\n                form.components.forEach(componentDataSetter);\n            });\n        }\n        function disposeComponents() {\n            self.components.forEach(function (component) {\n                if (component) {\n                    if (component.dispose) {\n                        component.dispose();\n                    }\n                    if (component.parentNode) {\n                        component.parentNode.removeChild(component);\n                    }\n                    if (component.handle && component.handle.parentNode) {\n                        component.handle.removeEventListener('mousedown', component.handle.beginReorderComponentFunction);\n                        component.handle.parentNode.removeChild(component.handle);\n                    }\n                    if (component.container && component.container.parentNode) {\n                        component.container.parentNode.removeChild(component.container);\n                    }\n                }\n            });\n        }\n        function dispose() {\n            disposeComponents();\n        }\n        function initSchema() {\n            if (!self.schema) { return; }\n            if (self.components) {\n                // dispose previous items\n                disposeComponents();\n            }\n            self.inputComponentOrganicOrder = [];\n            self.idCounter = -1;\n            self.components = [];\n            self.schema.forEach(function (header, index) {\n                var t = PivotForm.prototype.components.string,\n                    id = getNewId(),\n                    component;\n                if (PivotForm.prototype.components[header.type]) {\n                    t = PivotForm.prototype.components[header.type];\n                }\n                // instantiate component\n                component = t.call(intf, header, index, intf);\n                // add events, properties, id, name, index\n                util.addEvents(component, header.componentEvents);\n                component.header = header;\n                component.name = component.name || (header.name === undefined ? '__' + id : header.name);\n                component.id = id;\n                component.index = index;\n                // add component to the stack\n                self.components.push(component);\n                // listen to the component's change event\n                function change() {\n                    var cData = {};\n                    // set the new value of the element to data\n                    cData[header.name] = component.input.value;\n                    //intf.data = cData;\n                    // update any other components of the same header.name with this value\n                    getComponentsByPropertyValue('name', header.name).forEach(function (comp) {\n                        if (comp !== component) {\n                            comp.value = cData;\n                        }\n                    });\n                    // dispatch the change event to our listeners\n                    intf.dispatchEvent(new Event('change'));\n                }\n                component.addEventListener('change', change);\n                // if the component does not define the property value, define it\n                if (!component.hasOwnProperty('value')) {\n                    Object.defineProperty(component, 'value', {\n                        get: function () {\n                            // if the component defines an input, grab the value from the input's getter\n                            if (component.input) {\n                                return component.input.value;\n                            }\n                            // or just return the value set in data\n                            return self.data[header.name];\n                        },\n                        // use the async value setter for set\n                        set: function (value) {\n                            // value is the entire data object\n                            // if the value set has no property for this component's header name\n                            // exit now\n                            if (!value || !value.hasOwnProperty(header.name)) { return; }\n                            // update value to be the actual value instead of the entire data object\n                            value = value[header.name];\n                            function setValue(v) {\n                                // set the value of the form\n                                intf.data[header.name] = v;\n                                // if the component has a value to update, update it now\n                                if (component.input) {\n                                    component.input.value = v;\n                                }\n                                // if this component has not been initialized (had any initial value set)\n                                // mark it as initialized to allow external data to begin flowing into it\n                                if (!component.initialized) {\n                                    component.initialized = true;\n                                    if (component.classList) {\n                                        component.classList.remove('loading');\n                                    }\n                                    if (component.dispatchEvent) {\n                                        // tell dom initializer this component has been initialized\n                                        // delay by one animation frame to allow for\n                                        // other async setters in the schema to setup their functions\n                                        requestAnimationFrame(function () {\n                                            component.dispatchEvent(new Event('initialized'));\n                                        });\n                                    }\n                                }\n                            }\n                            var r,\n                                syncReturn,\n                                // if the value passed in was a function, this is the callback for that function\n                                callback = function (asyncValue) {\n                                    // check if the function returned a value earlier, if so, it's probably a mistake\n                                    if (syncReturn) {\n                                        throw new Error('Async return detected from value already set via sync function.');\n                                    }\n                                    // set the value asynchronously via setter\n                                    setValue(asyncValue);\n                                };\n                            // if a function was passed in, it could be async or sync\n                            if (typeof value === 'function') {\n                                if (component.classList) {\n                                    component.classList.add('loading');\n                                }\n                                r = value.apply(component, [callback]);\n                                // sync functions return a value now, async must return undefined (no return or return;)\n                                syncReturn = r !== undefined;\n                                if (syncReturn) {\n                                    // if it was a sync value, run setter now\n                                    setValue(r);\n                                    return;\n                                }\n                                component.async = true;\n                                return;\n                            }\n                            // if this was was not a function, run setter now\n                            setValue(value);\n                        }\n                    });\n                }\n                util.setProperties(component.style, header.componentStyle);\n            });\n            createDom();\n        }\n        function dispatchResize() {\n            intf.dispatchEvent(new Event('resize'));\n            requestAnimationFrame(function () {\n                window.dispatchEvent(new Event('resize'));\n            });\n        }\n        function init() {\n            if (intf.initialized) { return; }\n            self.shadowRoot = intf.attachShadow ? intf.attachShadow({mode: 'open'}) : intf;\n            if (!self.cssAttached) {\n                util.createElement('link', self.shadowRoot, {\n                    rel: 'stylesheet',\n                    href: /^file:\\/\\/\\//.test(window.location) ? '../lib/index.css' : 'data:text/css;base64,cssurl-target'\n                });\n                self.cssAttached = true;\n            }\n            if (intf.mode === 'dialog') {\n                self.dialogOptions.title = intf.title;\n                if (!self.dialog) {\n                    self.dialog = dialog(self.dialogOptions);\n                }\n                self.dialog.addEventListener('resized', dispatchResize);\n                if (self.userStyleSheet) {\n                    self.shadowRoot.appendChild(self.userStyleSheet);\n                }\n                self.dialog.content.appendChild(self.form);\n                self.shadowRoot.appendChild(self.dialog);\n                self.dialog.attached = true;\n            } else {\n                if (self.userStyleSheet) {\n                    self.shadowRoot.appendChild(self.userStyleSheet);\n                }\n                self.shadowRoot.appendChild(self.form);\n            }\n            intf.form = self.form;\n            intf.initialized = true;\n            loadState();\n            if (self.dialog) {\n                setTimeout(function () { self.dialog.centerHorizontally(); }, 1);\n            }\n        }\n        function dataSetter(value) {\n            if (!self.initialized) {\n                Object.assign(self.preInitData, value);\n                self.childForms.forEach(function (form) {\n                    form.data = value;\n                });\n                return;\n            }\n            initData(value);\n        }\n        function dataGetter() {\n            var d = {};\n            function componentDataGetter(component) {\n                if (!component.header.name) { return; }\n                d[component.header.name] = component.value;\n            }\n            self.components.forEach(componentDataGetter);\n            self.childForms.forEach(function (form) {\n                form.components.forEach(componentDataGetter);\n            });\n            Object.keys(d).forEach(function (key) {\n                var val = d[key];\n                Object.defineProperty(d, key, {\n                    set: function (value) {\n                        var cData = {};\n                        cData[key] = value;\n                        if (!self.initialized) {\n                            Object.assign(self.data, cData);\n                        }\n                        self.childForms.forEach(function (form) {\n                            form.data = cData;\n                        });\n                    },\n                    get: function () {\n                        return val;\n                    }\n                });\n            });\n            return d;\n        }\n        function schemaSetter(value) {\n            self.schema = value;\n            initSchema();\n        }\n        function addChildForm(form) {\n            form.id = getNewId();\n            function childFormChange() {\n                // tell the parent to dispatch an even to its listeners\n                intf.dispatchEvent(new Event('change'));\n            }\n            form.name = self.name ? (self.name + '_pivot-form_' + self.childForms.length) : undefined;\n            form.addEventListener('change', childFormChange);\n            intf.addEventListener('stylesheetchanged', function () {\n                form.stylesheet = intf.stylesheet;\n            });\n            if (intf.stylesheet) {\n                form.stylesheet = intf.stylesheet;\n            }\n            self.initializingComponents[form.id] = form;\n            form.addEventListener('initialized', function () {\n                delete self.initializingComponents[form.id];\n                doneInitializing();\n            });\n            self.childForms.push(form);\n        }\n        // public interface definitions\n        intf.init = init;\n        intf.dispose = dispose;\n        intf.getComponentByName = getComponentByName;\n        intf.getComponentById = getComponentById;\n        intf.getComponentsByPropertyValue = getComponentsByPropertyValue;\n        intf.resize = resize;\n        intf.addChildForm = addChildForm;\n        Object.defineProperty(intf, 'isContainer', {\n            get: function () { return true; }\n        });\n        Object.defineProperty(intf, 'components', {\n            get: function () {\n                return self.components;\n            }\n        });\n        Object.defineProperty(intf, 'data', {\n            get: dataGetter,\n            set: dataSetter\n        });\n        Object.defineProperty(intf, 'mode', {\n            get: function () {\n                return self.mode;\n            },\n            set: function (value) {\n                if (value === 'dialog') {\n                    self.mode = 'dialog';\n                } else {\n                    self.mode = 'block';\n                }\n                if (!self.initialized) { return; }\n                if (self.mode === 'dialog') {\n                    if (!self.dialog) {\n                        self.dialog = dialog(self.dialogOptions);\n                    }\n                    self.dialog.title.innerHTML = self.title;\n                    self.dialog.content.appendChild(self.form);\n                    intf.appendChild(self.dialog);\n                    self.dialog.attached = true;\n                    requestAnimationFrame(function () {\n                        self.dialog.centerHorizontally();\n                    });\n                } else {\n                    if (self.dialog) {\n                        self.dialog.attached = false;\n                    }\n                    intf.appendChild(self.form);\n                }\n            }\n        });\n        Object.defineProperty(intf, 'initializingComponents', {\n            get: function () {\n                return self.initializingComponents;\n            }\n        });\n        Object.defineProperty(intf, 'childForms', {\n            get: function () {\n                return self.childForms;\n            }\n        });\n        Object.defineProperty(intf, 'title', {\n            get: function () {\n                return self.title;\n            },\n            set: function (value) {\n                self.title = value;\n                if (self.dialog) {\n                    self.dialog.title.innerHTML = value;\n                }\n            }\n        });\n        Object.defineProperty(intf, 'dialog', {\n            get: function () {\n                return self.dialog || { attached: false };\n            }\n        });\n        Object.defineProperty(intf, 'schema', {\n            get: function () {\n                return self.schema;\n            },\n            set: schemaSetter\n        });\n        Object.defineProperty(intf, 'name', {\n            get: function () {\n                return self.name;\n            },\n            set: function (value) {\n                self.name = value;\n                loadState();\n            }\n        });\n        Object.defineProperty(intf, 'stylesheet', {\n            get: function () {\n                if (!self.userStyleSheet) {\n                    return undefined;\n                }\n                return self.userStyleSheet.originalValue;\n            },\n            set: function (value) {\n                if (self.userStyleSheet && self.userStyleSheet.parentNode) {\n                    self.userStyleSheet.parentNode.removeChild(self.userStyleSheet);\n                    self.userStyleSheet = undefined;\n                }\n                if (!value) { return; }\n                self.userStyleSheet = util.createElement('link');\n                self.userStyleSheet.rel = 'stylesheet';\n                self.userStyleSheet.type = 'text/css';\n                self.userStyleSheet.href = value;\n                self.userStyleSheet.originalValue = value;\n                intf.dispatchEvent(new Event('stylesheetchanged'));\n                if (self.shadowRoot) {\n                    self.shadowRoot.appendChild(self.userStyleSheet);\n                }\n            }\n        });\n        return intf;\n    }\n    function connectedCallback(el) {\n        (el || this).init();\n        return;\n    }\n    PivotForm.prototype = Object.create(window.HTMLElement.prototype);\n    if (window.customElements) {\n        PivotForm.prototype.disconnectedCallback = function () {\n            return;\n        };\n        PivotForm.prototype.getObservableAttributes = function () {\n            return attributeList;\n        };\n        PivotForm.prototype.connectedCallback = connectedCallback;\n        PivotForm.prototype.adoptedCallback = function () {\n            return;\n        };\n        PivotForm.prototype.attributeChangedCallback = function (attrName, oldVal, newVal) {\n            this[attrName] = newVal;\n            return;\n        };\n        window.customElements.define('pivot-form', PivotForm);\n    }\n    function pivotFormFactory(args) {\n        args = args || {};\n        requestAnimationFrame(function () {\n            window.dispatchEvent(new Event('resize'));\n        });\n        if (window.customElements) {\n            return new PivotForm(args);\n        }\n        var f = new PivotForm(args);\n        if (args.parentNode) {\n            args.parentNode.appendChild(f.form);\n        }\n        attributeList.forEach(function (attrKey) {\n            if (args[attrKey]) {\n                f[attrKey] = args[attrKey];\n            }\n        });\n        if (!f.form) {\n            connectedCallback(f);\n        }\n        return f;\n    }\n    PivotForm.prototype.components = defaultComponents;\n    window.pivotForm = pivotFormFactory;\n    return pivotFormFactory;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/index.js\n// module id = 1\n// module chunks = 0","/*jslint browser: true, unparam: true, todo: true, evil: true*/\n/*globals define: false, requestAnimationFrame: false, Event: false*/\ndefine(['../util.js'], function (util) {\n    'use strict';\n    var components = {};\n    // components that contain other components must be described here because\n    // of the inherit circular reference to the components module\n    function inputComponentFactory(inputOptions) {\n        return function (header, index, pivotForm) {\n            var component = util.createElement('span', null, {className: 'component input-type-' + inputOptions.type}),\n                label = util.createElement('span', component, {className: 'label'}),\n                input = util.createElement('input', component, inputOptions);\n            label.innerHTML = header.title === undefined ? header.name : header.title;\n            component.label = label;\n            component.input = input;\n            util.addEvents(input, header.events);\n            util.addEvents(label, header.labelEvents);\n            util.setProperties(input.style, header.style);\n            util.setProperties(label.style, header.labelStyle);\n            util.setProperties(component.containerStyle, header.containerStyle);\n            component.addEventListener = input.addEventListener;\n            component.removeEventListener = input.removeEventListener;\n            return component;\n        };\n    }\n    // html 4 input types\n    ['checkbox', 'file', 'hidden', 'image', 'password', 'radio', 'reset', 'submit', 'text',\n        // html 5 input types\n        'color', 'date', 'datetime-local', 'email', 'month', 'number', 'range', 'search', 'tel', 'time',\n        'url', 'week'].forEach(function (typeKey) {\n        components[typeKey] = inputComponentFactory({className: 'input', type: typeKey});\n    });\n    components.select = function (header, index, pivotForm) {\n        var componentContext = this,\n            component = util.createElement('span', null, {className: 'component'}),\n            label = util.createElement('span', component, {className: 'label'}),\n            input = util.createElement('select', component, {className: 'select'}),\n            fEnumVal,\n            options = [];\n        function fillOptions(arr) {\n            arr.forEach(function (item) {\n                var option;\n                if (!Array.isArray(item)) { item = [item, item]; }\n                option = util.createElement('option', input, {value: item[0], innerHTML: item[1]});\n                util.setProperties(option, header.optionStyle);\n                options.push(option);\n            });\n        }\n        label.innerHTML = header.title === undefined ? header.name : header.title;\n        component.label = label;\n        component.input = input;\n        component.containerStyle = {};\n        util.addEvents(input, header.events);\n        util.addEvents(label, header.labelEvents);\n        util.setProperties(input.style, header.style);\n        util.setProperties(label.style, header.labelStyle);\n        util.setProperties(component.containerStyle, header.containerStyle);\n        if (Array.isArray(header.enum)) {\n            fillOptions(header.enum);\n        } else if (typeof header.enum === 'function') {\n            fEnumVal = header.enum.apply(componentContext, [function (value) {\n                if (fEnumVal) { throw new Error('Async return detected from value already set via sync function.'); }\n                fillOptions(value);\n            }]);\n            if (fEnumVal) {\n                fillOptions(fEnumVal);\n            }\n        }\n        component.addEventListener = input.addEventListener;\n        component.removeEventListener = input.removeEventListener;\n        return component;\n    };\n    components.HTMLElement = function (header, index, pivotForm) {\n        var component = util.createElement(header.tagName, null, header);\n        util.addEvents(component, header.componentEvents);\n        util.setProperties(component.style, header.componentStyle);\n        util.setProperties(component.containerStyle, header.containerStyle);\n        return component;\n    };\n    ['h1', 'h2', 'h3', 'h4', 'button', 'hr', 'pre',\n        'label', 'div', 'p', 'span', 'i', 'a'].forEach(function (h) {\n        components[h] = function (header, index, pivotForm) {\n            header.tagName = h;\n            return components.HTMLElement(header, index, pivotForm);\n        };\n    });\n    components.string = components.text;\n    components['canvas-datagrid'] = function (header, index, pivotForm) {\n        var pContext, component, grid, importScript;\n        if (!window.canvasDatagrid) {\n            importScript = util.createElement('script', null);\n            importScript.src = header.src || 'https://unpkg.com/canvas-datagrid';\n            importScript.type = 'text/javascript';\n            importScript.async = false;\n            document.getElementsByTagName('head')[0].appendChild(importScript);\n        }\n        pContext = this;\n        component = util.createElement('div', null, {className: 'canvas-datagrid-child'});\n        grid = window.canvasDatagrid();\n        component.containerStyle = {\n            width: '100%',\n            height: '100%'\n        };\n        component.input = grid;\n        header.static = header.static === undefined ? true : header.static;\n        component.appendChild(grid);\n        Object.keys(header).forEach(function (propertyKey) {\n            grid[propertyKey] = header[propertyKey];\n        });\n        util.setProperties(grid, header);\n        util.setProperties(component.containerStyle, header.containerStyle);\n        grid.name = pContext.name ? (pContext.name + '_canvas-datagrid_' + index) : undefined;\n        util.addEvents(grid, header.events);\n        util.addEvents(component, header.componentEvents);\n        component.resize = function () {\n            setTimeout(function () { grid.resize(true); }, 10);\n        };\n        function changeEvent() {\n            if (!pivotForm.data) { return; }\n            pivotForm.dispatchEvent(new Event('change'));\n        }\n        grid.addEventListener('endedit', changeEvent);\n        Object.defineProperty(grid, 'value', {\n            set: function (value) {\n                grid.data = value;\n            },\n            get: function () {\n                return grid.data;\n            }\n        });\n        return component;\n    };\n    // hierarchical components\n    components['pivot-form'] = function (header, index, pivotForm) {\n        var component;\n        component = window.pivotForm();\n        component.containerStyle = {};\n        component.className = 'pivot-form-child';\n        pivotForm.addChildForm(component);\n        component.index = index;\n        header.static = header.static === undefined ? true : header.static;\n        util.setProperties(component.style, header.style);\n        util.addEvents(component, header.events);\n        Object.defineProperty(component, 'value', {\n            get: function () {\n                return component.data;\n            },\n            set: function (value) {\n                component.data = value;\n            }\n        });\n        return component;\n    };\n    components.tabs = function (header, index, pivotForm) {\n        var pContext = this,\n            component = util.createElement('div', null, {className: 'tabbed-component'}),\n            tabsContainer = util.createElement('div', component, {className: 'tabs'}),\n            activeTabIndex,\n            tabs = [],\n            defaultTab = header.defaultTabIndex || 0;\n        component.containerStyle = {\n            width: '100%'\n        };\n        component.isContainer = true;\n        component.tabsContainer = tabsContainer;\n        component.tabs = tabs;\n        header.static = header.static === undefined ? true : header.static;\n        function activateTab(tabIndex) {\n            var activeTabItem = tabs[tabIndex],\n                e = new Event('activatetab');\n            e.tab = activeTabItem;\n            if (!activeTabItem) { return; }\n            activeTabIndex = tabIndex;\n            tabs.forEach(function (tab) {\n                var ev = new Event('deactivatetab');\n                ev.tab = tab;\n                tab.tabElement.classList.add('tab-inactive');\n                tab.tabElement.classList.remove('tab-active');\n                tab.content.classList.remove('tab-content-active');\n                if (tab.content.parentNode) {\n                    tab.content.parentNode.removeChild(tab.content);\n                    component.dispatchEvent(ev);\n                }\n            });\n            activeTabItem.tabElement.classList.add('tab-active');\n            activeTabItem.tabElement.classList.remove('tab-inactive');\n            activeTabItem.content.classList.add('tab-content-active');\n            component.appendChild(activeTabItem.content);\n            activeTabItem.content.resize();\n            component.dispatchEvent(e);\n        }\n        header.tabs.forEach(function (tabHeader, index) {\n            var tab = {};\n            tab.tabElement = util.createElement('div', tabsContainer, {\n                className: 'tab ' + 'tab-' + util.varSafe(tabHeader.name),\n                events: {\n                    click: function (e) {\n                        if (activeTabIndex === index) { return; }\n                        activateTab(index);\n                    }\n                },\n                innerHTML: tabHeader.title || tabHeader.name\n            });\n            tab.content = components['pivot-form'].call(pContext, tabHeader, index, pivotForm);\n            tab.content.classList.add('tab-content');\n            util.setProperties(tab.content, tabHeader);\n            util.setProperties(tab.tabElement, tabHeader.tabStyle);\n            util.addEvents(tab.tabElement, tabHeader.tabEvents);\n            util.addEvents(tab.content, tabHeader.contentEvents);\n            util.addEvents(tab.content, tabHeader.events);\n            tabs.push(tab);\n        });\n        util.addEventInterface(component, header, index, pivotForm);\n        util.addEvents(component, header.events);\n        util.setProperties(component.containerStyle, header.containerStyle);\n        // instantiate each tab\n        header.tabs.forEach(function (tabName, index) {\n            if (defaultTab === index) { return; }\n            requestAnimationFrame(function () { activateTab(index); });\n        });\n        requestAnimationFrame(function () { activateTab(defaultTab || 0); });\n        Object.defineProperty(component, 'tabIndex', {\n            get: function () {\n                return activeTabIndex;\n            },\n            set: function (value) {\n                return activateTab(Math.max(value, tabs.length - 1));\n            }\n        });\n        Object.defineProperty(component, 'value', {\n            get: function () {\n                var d = {};\n                tabs.forEach(function (tab) {\n                    Object.assign(d, tab.data);\n                });\n                return d;\n            },\n            set: function (value) {\n                tabs.forEach(function (tab) {\n                    tab.value = value;\n                });\n                return;\n            }\n        });\n        return component;\n    };\n    return components;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/components/index.js\n// module id = 2\n// module chunks = 0","/*jslint browser: true, unparam: true, todo: true, evil: true*/\n/*globals define: false, performance: false, Event: false*/\ndefine(['./util.js'], function (util) {\n    'use strict';\n    var ce = util.createElement;\n    function dialogModule(args) {\n        args = args || {};\n        var self = {},\n            intf = ce('div', null, {className: 'dialog'});\n        self.intf = intf;\n        self.closeable = true;\n        self.maximizeable = false;\n        self.minimizable = false;\n        self.stayCenteredHorizontally = false;\n        self.stayCenteredVertically = false;\n        intf.minWidth = 300;\n        intf.minHeight = 27;\n        // a rough area were bandit pixels hang out\n        self.borderZone = 10;\n        intf.attached = false;\n        function resizeMouseHover(ev) {\n            if (self.moving) { return; }\n            if (self.minimized) { return; }\n            if (self.maximized) { return; }\n            self.borderResizeCursor = 'auto';\n            self.borderResizeMode = undefined;\n            var d = intf.getBoundingClientRect(),\n                b = self.borderZone,\n                x = ev.clientX - d.left,\n                y = ev.clientY - d.top,\n                height = d.height,\n                width = d.width,\n                n = y < b,\n                w = x < b,\n                e = x - width + b > 0,\n                s = y - height + b > 0,\n                m = y < self.titleBar.offsetHeight;\n            self.borderResizeMode = {n: n, s: s, e: e, w: w, m: m};\n            if (n && w) {\n                self.borderResizeCursor = 'nwse-resize';\n            } else if (n && e) {\n                self.borderResizeCursor = 'nesw-resize';\n            } else if (s && w) {\n                self.borderResizeCursor = 'nesw-resize';\n            } else if (s && e) {\n                self.borderResizeCursor = 'nwse-resize';\n            } else if (n) {\n                self.borderResizeCursor = 'ns-resize';\n            } else if (s) {\n                self.borderResizeCursor = 'ns-resize';\n            } else if (e) {\n                self.borderResizeCursor = 'ew-resize';\n            } else if (w) {\n                self.borderResizeCursor = 'ew-resize';\n            }\n            intf.style.cursor = self.borderResizeCursor;\n        }\n        function moveResizeDialog(e) {\n            if (self.minimized) { return; }\n            if (self.maximized) { return; }\n            var s = self.startMove,\n                r = self.borderResizeMode,\n                deltaY = (e.clientY -  s.clientY),\n                deltaX = (e.clientX -  s.clientX);\n            intf.classList.add('noselect');\n            if (r.n || r.s || r.e || r.w) {\n                if (r.n) {\n                    intf.style.top = s.offsetTop + deltaY + 'px';\n                    intf.style.height = Math.max(intf.minHeight, s.offsetHeight - deltaY) + 'px';\n                }\n                if (r.s) {\n                    intf.style.height = Math.max(intf.minHeight, s.offsetHeight + deltaY) + 'px';\n                }\n                if (r.w) {\n                    intf.style.left = s.offsetLeft + deltaX + 'px';\n                    intf.style.width = Math.max(intf.minWidth, s.offsetWidth - deltaX) + 'px';\n                }\n                if (r.e) {\n                    intf.style.width = Math.max(intf.minWidth, s.offsetWidth + deltaX) + 'px';\n                }\n                window.dispatchEvent(new Event('resize'));\n            } else if (r.m) {\n                intf.style.top = s.offsetTop + deltaY + 'px';\n                intf.style.left = s.offsetLeft + deltaX + 'px';\n            }\n            e.stopPropagation();\n        }\n        function centerVertically(verticalAlso) {\n            intf.style.top = document.scrollingElement.scrollTop + (window.innerHeight / 2) - (self.intf.offsetHeight / 2) + 'px';\n        }\n        function centerHorizontally(verticalAlso) {\n            intf.style.left = (window.innerWidth / 2) - (self.intf.offsetWidth / 2) + 'px';\n        }\n        function center() {\n            centerVertically();\n            centerHorizontally();\n        }\n        function endMove(e) {\n            self.moving = false;\n            intf.classList.remove('noselect');\n            document.removeEventListener('mouseup', endMove);\n            document.removeEventListener('mousemove', moveResizeDialog);\n        }\n        function beginDialogMove(e) {\n            if (self.minimized) { return; }\n            if (self.maximized) { return; }\n            self.moving = true;\n            self.startMove = {\n                clientX: e.clientX,\n                clientY: e.clientY,\n                offsetWidth: intf.offsetWidth,\n                offsetHeight: intf.offsetHeight,\n                offsetLeft: intf.offsetLeft,\n                offsetTop: intf.offsetTop,\n            };\n            document.addEventListener('mouseup', endMove);\n            document.addEventListener('mousemove', moveResizeDialog);\n        }\n        function resize() {\n            if (self.maximized) {\n                intf.style.width = window.innerWidth + 'px';\n                intf.style.height = window.innerHeight + 'px';\n            }\n            if (self.stayCenteredHorizontally) {\n                centerHorizontally();\n            }\n            if (self.stayCenteredVertically) {\n                centerVertically();\n            }\n        }\n        function dispose() {\n            if (intf.parentNode) {\n                intf.parentNode.removeChild(intf);\n            }\n            window.removeEventListener('resize', resize);\n        }\n        function open() {\n            intf.classList.remove('dialog-closed');\n            window.dispatchEvent(new Event('resize'));\n        }\n        function close() {\n            intf.classList.add('dialog-closed');\n            window.dispatchEvent(new Event('resize'));\n        }\n        function restoreSavedSize() {\n            intf.style.top = self.restoreRect.top + 'px';\n            intf.style.left = self.restoreRect.left + 'px';\n            intf.style.height = self.restoreRect.height + 'px';\n            intf.style.width = self.restoreRect.width + 'px';\n        }\n        function minimize() {\n            self.minimized = !self.minimized;\n            if (self.minimized) {\n                self.restoreRect = intf.getBoundingClientRect();\n                intf.classList.add('dialog-minimized');\n                self.controlBoxMaximize.classList.add('dialog-restore');\n                window.dispatchEvent(new Event('resize'));\n                intf.style.top = '';\n                intf.style.left = '';\n                intf.style.width = '';\n                intf.style.height = '';\n                return;\n            }\n            restoreSavedSize();\n            intf.classList.remove('dialog-minimized');\n            self.controlBoxMaximize.classList.remove('dialog-restore');\n            window.dispatchEvent(new Event('resize'));\n        }\n        function maximize() {\n            self.maximized = !self.maximized;\n            if (self.maximized) {\n                self.restoreRect = intf.getBoundingClientRect();\n                intf.classList.add('dialog-maximized');\n                self.controlBoxMaximize.classList.add('dialog-restore');\n                intf.style.top = '0px';\n                intf.style.left = '0px';\n                intf.style.width = window.innerWidth + 'px';\n                intf.style.height = window.innerHeight + 'px';\n                window.dispatchEvent(new Event('resize'));\n                return;\n            }\n            intf.classList.remove('dialog-maximized');\n            self.controlBoxMaximize.classList.remove('dialog-restore');\n            restoreSavedSize();\n            window.dispatchEvent(new Event('resize'));\n        }\n        function init() {\n            self.modalElement = ce('div', null, {\n                style: {\n                    top: 0,\n                    left: 0,\n                    position: 'fixed',\n                    background: 'rgba(0, 0, 0, 0.25)',\n                    height: '100%',\n                    width: '100%'\n                }\n            });\n            self.titleBar = ce('div', intf, {className: 'dialog-title-bar'});\n            self.title = ce('span', self.titleBar, {className: 'dialog-title', innerHTML: args.title || '' });\n            self.content = ce('div', intf, {className: 'dialog-content'});\n            self.card = ce('div', null, {className: 'dialog-card'});\n            self.controlBoxMinimize = ce('div', null, {className: 'dialog-minimize'});\n            self.controlBoxMaximize = ce('div', null, {className: 'dialog-maximize'});\n            self.controlBoxClose = ce('div', self.titleBar, {className: 'dialog-close'});\n            self.titleBar.addEventListener('mousedown', beginDialogMove);\n            intf.style.top = document.scrollingElement.scrollTop + 20 + 'px';\n            window.addEventListener('resize', resize);\n            intf.addEventListener('mousedown', beginDialogMove);\n            intf.addEventListener('mousemove', resizeMouseHover);\n            // interface\n            Object.defineProperty(intf, 'title', {\n                get: function () {\n                    return self.title;\n                }\n            });\n            Object.defineProperty(intf, 'modal', {\n                get: function (value) {\n                    return self.modal;\n                },\n                set: function (value) {\n                    self.modal = !!value;\n                    if (self.modal) {\n                        document.body.appendChild(self.modalElement);\n                    } else {\n                        document.body.removeChild(self.modalElement);\n                    }\n                    window.dispatchEvent(new Event('resize'));\n                }\n            });\n            Object.defineProperty(intf, 'value', {\n                get: function () {\n                    return self.title.innerHTML;\n                },\n                set: function (value) {\n                    self.card.innerHTML = value;\n                    self.title.innerHTML = value;\n                }\n            });\n            Object.defineProperty(intf, 'closeable', {\n                get: function () {\n                    return self.closeable;\n                },\n                set: function (value) {\n                    self.closeable = !!value;\n                    self.controlBoxClose.style.display = self.closeable ? 'inline-block' : 'none';\n                }\n            });\n            Object.defineProperty(intf, 'maximizeable', {\n                get: function () {\n                    return self.maximizeable;\n                },\n                set: function (value) {\n                    self.maximizeable = !!value;\n                    self.controlBoxMaximize.style.display = self.maximizeable ? 'inline-block' : 'none';\n                    self.titleBar.ondblclick = self.maximizeable ? maximize : undefined;\n                }\n            });\n            Object.defineProperty(intf, 'stayCenteredHorizontally', {\n                get: function () {\n                    return self.stayCenteredHorizontally;\n                },\n                set: function (value) {\n                    self.stayCenteredHorizontally = !!value;\n                    resize();\n                }\n            });\n            Object.defineProperty(intf, 'stayCenteredVertically', {\n                get: function () {\n                    return self.stayCenteredVertically;\n                },\n                set: function (value) {\n                    self.stayCenteredVertically = !!value;\n                    resize();\n                }\n            });\n            Object.defineProperty(intf, 'minimizable', {\n                get: function () {\n                    return self.minimizable;\n                },\n                set: function (value) {\n                    self.minimizable = !!value;\n                    self.controlBoxMinimize.style.display = self.minimizable ? 'inline-block' : 'none';\n                }\n            });\n            intf.content = self.content;\n            intf.card = self.card;\n            intf.titleBar = self.titleBar;\n            intf.center = center;\n            intf.centerHorizontally = centerHorizontally;\n            intf.centerVertically = centerVertically;\n            intf.controlBoxMinimize = self.controlBoxMinimize;\n            intf.controlBoxMaximize = self.controlBoxMaximize;\n            intf.controlBoxClose = self.controlBoxClose;\n            intf.open = open;\n            intf.close = close;\n            intf.dispose = dispose;\n            intf.maximize = maximize;\n            intf.minimize = minimize;\n            intf.maximize = maximize;\n            self.controlBoxClose.onclick = close;\n            self.controlBoxMinimize.onclick = minimize;\n            self.controlBoxMaximize.onclick = maximize;\n        }\n        init();\n        return intf;\n    }\n    return dialogModule;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/dialog.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}