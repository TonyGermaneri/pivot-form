{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c239abbbcde9b2305f51","webpack:///./lib/util.js","webpack:///./lib/index.js","webpack:///./lib/components/index.js","webpack:///./lib/dialog.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA,oCAAoC,0CAA0C,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8DAA8D,QAAQ;AACtE;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;;;;;;;;;;;;ACxHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wBAAwB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4BAA4B;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,4BAA4B;AAC7E,gFAAgF,yBAAyB;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,YAAY,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,0CAA0C,2DAA2D;AACrG;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,QAAQ;AACnC,kFAAkF,YAAY,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mFAAmF,aAAa;AAChG;AACA;AACA;AACA;AACA;AACA,yGAAyG;AACzG,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4DAA4D;AACvG,+CAA+C,oGAAoG;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;;;;;;;;;;;;AC7cD;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,6CAA6C,uBAAuB;AACpE,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,kCAAkC;AACvF,KAAK;AACL;AACA;AACA,yCAAyC,uBAAuB;AAChE,0CAA0C,mBAAmB;AAC7D,6CAA6C,oBAAoB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,2CAA2C,qBAAqB;AAChE,8CAA8C,mCAAmC;AACjF;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+BAA+B,oFAAoF;AACnH;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mCAAmC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yCAAyC,8BAA8B;AACvE,yCAAyC,kBAAkB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,+CAA+C,2BAA2B;AAC1E;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C,+CAA+C,sBAAsB,EAAE;AACvE,SAAS;AACT,2CAA2C,mDAAmD,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AAAA;;;;;;;;;;;;ACrVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC,iCAAiC,QAAQ;AACzC,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0BAA0B;AACpE,6CAA6C,8BAA8B;AAC3E,oDAAoD,wDAAwD;AAC5G,4CAA4C,4BAA4B;AACxE,yCAAyC,yBAAyB;AAClE,uDAAuD,6BAA6B;AACpF,uDAAuD,6BAA6B;AACpF,6DAA6D,0BAA0B;AACvF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA","file":"pivot-form.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pivot-form\"] = factory();\n\telse\n\t\troot[\"pivot-form\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c239abbbcde9b2305f51","/*jslint browser: true, unparam: true, todo: true, evil: true*/\n/*globals define: false, Event: false*/\ndefine([], function () {\n    'use strict';\n    return {\n        jsonCopy: function (value) { return JSON.parse(JSON.stringify(value)); },\n        addEventInterface: function (component, header, index, data, intf) {\n            component.events = {};\n            component.addEventListener = function (ev, fn) {\n                component.events[ev] = component.events[ev] || [];\n                component.events[ev].unshift(fn);\n            };\n            component.removeEventListener = function (ev, fn) {\n                (component.events[ev] || []).forEach(function removeEachListener(sfn, idx) {\n                    if (fn === sfn) {\n                        component.events[ev].splice(idx, 1);\n                    }\n                });\n            };\n            component.dispatchEvent = function (ev, e) {\n                e = e || {};\n                var defaultPrevented;\n                function preventDefault() {\n                    defaultPrevented = true;\n                }\n                if (!component.events[ev]) { return; }\n                component.events[ev].forEach(function dispatchEachEvent(fn) {\n                    e.preventDefault = preventDefault;\n                    fn.apply(component, [e, component, header, index, data, intf]);\n                });\n                return defaultPrevented;\n            };\n        },\n        asyncValueSetter: function (e) {\n            return function (value) {\n                if (!value) { return; }\n                value = value[e.header.name];\n                function setValue(n) {\n                    var v = n === undefined ? '' : n;\n                    e.form.data[e.header.name] = v;\n                    if (e.input) {\n                        e.input.value = v;\n                        if (!e.component.initialized) {\n                            e.component.initialized = true;\n                            e.component.classList.remove('loading');\n                            e.component.dispatchEvent(new Event('initialized'));\n                        }\n                    }\n                }\n                var r,\n                    syncReturn,\n                    callback = function (asyncValue) {\n                        if (syncReturn) {\n                            throw new Error('Async return detected from value already set via sync function.');\n                        }\n                        setValue(asyncValue);\n                    };\n                if (typeof value === 'function') {\n                    e.component.classList.add('loading');\n                    r = value.apply(e, [callback]);\n                    syncReturn = r !== undefined;\n                    if (syncReturn) {\n                        setValue(r);\n                    }\n                    return;\n                }\n                setValue(value);\n            };\n        },\n        setProperties: function (root, props) {\n            if (typeof props !== 'object' || props === null) { return; }\n            Object.keys(props).forEach(function (keyName) {\n                root[keyName] = props[keyName];\n            });\n        },\n        addEvents: function (el, events) {\n            if (events && typeof events === 'object' && events !== null) {\n                Object.keys(events).forEach(function (eKey) {\n                    el.addEventListener(eKey, events[eKey]);\n                });\n            }\n        },\n        createElement: function createElement(tag, parentNode, attributes) {\n            var el = document.createElement(tag);\n            if (attributes) {\n                Object.keys(attributes).forEach(function (attrKey) {\n                    var value = attributes[attrKey];\n                    if (attrKey === 'value') {\n                        el.value = value;\n                        return;\n                    }\n                    if (attrKey === 'className') {\n                        el.className = value;\n                        return;\n                    }\n                    if (attrKey === 'style') {\n                        Object.keys(attributes.style).forEach(function (cKey) {\n                            el.style[cKey] = attributes.style[cKey];\n                        });\n                        return;\n                    }\n                    if (attrKey === 'events') {\n                        Object.keys(attributes.events).forEach(function (eKey) {\n                            el.addEventListener(eKey, attributes.events[eKey]);\n                        });\n                        return;\n                    }\n                    if (attrKey === 'innerHTML') {\n                        el.innerHTML = value;\n                        return;\n                    }\n                    el.setAttribute(attrKey, value);\n                });\n            }\n            if (parentNode) {\n                parentNode.appendChild(el);\n            }\n            return el;\n        }\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 0\n// module chunks = 0","/*jslint browser: true, unparam: true, todo: true, evil: true*/\n/*globals define: false, performance: false, requestAnimationFrame: false, Event: false*/\ndefine(['./components/index.js', './util.js', './dialog.js'], function (defaultComponents, util, dialog) {\n    'use strict';\n    var ce = util.createElement,\n        sp = util.setProperties,\n        attributeList = ['data', 'schema', 'name', 'components'];\n    function PivotForm(args) {\n        args = args || {};\n        // only non-dom related items can be instantiated prior to init (connectedCallback)\n        var dialogOptions, self = {};\n        self.args = args;\n        self.initialized = false;\n        self.form = ce('form', null, {className: 'pivot-form'});\n        self.uniqueId = Math.random() + '-' + performance.now();\n        self.title = '';\n        self.fieldOrder = [];\n        self.fields = [];\n        self.idCounter = -1;\n        self.components = {};\n        self.data = {};\n        self.initializingFields = [];\n        self.intf = window.customElements ? eval('Reflect.construct(HTMLElement, [], new.target)') : ce('section');\n        util.addEventInterface(self.intf);\n        function getNewId() {\n            self.idCounter += 1;\n            return self.idCounter.toString(36);\n        }\n        function getFieldsByPropertyValue(key, value) {\n            var found = [];\n            self.fields.forEach(function (field) {\n                if (field.component && field.component.isContainer) {\n                    found = found.concat(field.component.getFieldsByPropertyValue(key, value));\n                }\n                if (value === field[key] || (field.header && value === field.header[key])) {\n                    found.push(field);\n                }\n            });\n            return found;\n        }\n        function getFieldByName(value) {\n            return getFieldsByPropertyValue('name', value)[0];\n        }\n        function getFieldById(value) {\n            return getFieldsByPropertyValue('id', value)[0];\n        }\n        function saveState() {\n            if (self.name) {\n                try {\n                    localStorage.setItem('pivot-form-order-' + self.name, JSON.stringify({\n                        fieldOrder: self.fieldOrder\n                    }));\n                } catch (ignore) {}\n            }\n        }\n        function updateFlexOrder() {\n            self.inputFieldOrganicOrder.forEach(function (itemContainer, organicFieldIndex) {\n                organicFieldIndex += 1;\n                itemContainer.style.order = self.fieldOrder.indexOf(organicFieldIndex);\n            });\n            saveState();\n        }\n        function loadState() {\n            if (self.name && self.initialized) {\n                try {\n                    var d = localStorage.getItem('pivot-form-order-' + self.name);\n                    d = self.fieldOrder = JSON.parse(d).fieldOrder;\n                } catch (ignore) {\n                    self.fieldOrder = [];\n                }\n                updateFlexOrder();\n            }\n        }\n        function reorderComponents() {\n            if (!self.moveTo) { return; }\n            var o = self.fieldOrder.indexOf(self.moveFrom.organicFieldIndex),\n                t = self.fieldOrder.indexOf(self.moveTo.organicFieldIndex);\n            self.fieldOrder.splice(o, 1);\n            self.fieldOrder.splice(t, 0, self.moveFrom.organicFieldIndex);\n            updateFlexOrder();\n            return;\n        }\n        function reorderField(e) {\n            // move up e until a base component item is found, then draw a line below it\n            // and mark it as the target of the dropping (item reordering)\n            self.moveMarker.style.left = e.clientX + 'px';\n            self.moveMarker.style.top = e.clientY + 'px';\n            var tOrd, uid, el = e.target;\n            while (el && el.parentNode && el.tagName !== 'BODY') {\n                tOrd = parseInt(self.moveFrom.style.order, 10);\n                uid = el.getAttribute('data-uniqueId');\n                if (uid === self.uniqueId && el !== self.moveFrom) {\n                    if (self.moveTo) {\n                        self.moveTo.classList.remove('reorder-drag-over');\n                    }\n                    self.moveTo = el;\n                    self.moveTo.classList.add('reorder-drag-over');\n                    self.moveTargetIndex = parseInt(tOrd, 10);\n                    return;\n                }\n                el = el.parentNode;\n            }\n            return;\n        }\n        function endReorderField() {\n            if (self.moveTo) {\n                self.moveTo.classList.remove('reorder-drag-over');\n            }\n            reorderComponents();\n            if (self.moveMarker.parentNode) {\n                self.moveMarker.parentNode.removeChild(self.moveMarker);\n            }\n            self.form.classList.remove('noselect');\n            self.moveTo = undefined;\n            self.moveFrom = undefined;\n            self.moveMarker = undefined;\n            self.shadowRoot.removeEventListener('mousemove', reorderField);\n            self.shadowRoot.removeEventListener('mouseup', endReorderField);\n            return;\n        }\n        function beginReorderField(organicFieldIndex, itemContainer) {\n            return function (e) {\n                self.form.classList.add('noselect');\n                self.moveMarker = ce('div', self.shadowRoot, {className: 'reorder-marker'});\n                self.moveFrom = itemContainer;\n                reorderField(e);\n                self.shadowRoot.addEventListener('mousemove', reorderField);\n                self.shadowRoot.addEventListener('mouseup', endReorderField);\n            };\n        }\n        function createDom() {\n            self.fields.forEach(function (field, organicFieldIndex) {\n                organicFieldIndex += 1;\n                var container = ce('div', null, {className: 'component-item'}),\n                    handle = ce('div', field.header.static ? null : container, {className: 'item-handle'}),\n                    dataStub = {};\n                if (field.header.hidden) {\n                    container.style.display = 'none';\n                }\n                function initialized() {\n                    field.component.removeEventListener('initialized', initialized);\n                    delete self.initializingFields[organicFieldIndex];\n                    if (self.initializingFields.filter(function (i) { return !!i; })\n                            .length === 0 && self.preInitDataSet) {\n                        var f = self.preInitDataSet;\n                        delete self.preInitDataSet;\n                        self.intf.data = f;\n                    }\n                }\n                field.container = container;\n                field.handle = container;\n                container.setAttribute('data-uniqueId', self.uniqueId);\n                handle.beginReorderFieldFunction = beginReorderField(organicFieldIndex, container);\n                handle.addEventListener('mousedown', handle.beginReorderFieldFunction);\n                container.organicFieldIndex = organicFieldIndex;\n                container.name = field.name;\n                self.fieldOrder[organicFieldIndex] = self.fieldOrder[organicFieldIndex] === undefined\n                    ? organicFieldIndex : self.fieldOrder[organicFieldIndex];\n                container.appendChild(field.component);\n                sp(container.style, field.component.containerStyle);\n                sp(handle, field.component.handleStyle);\n                sp(container.style, field.containerStyle);\n                sp(handle, field.handleStyle);\n                self.form.appendChild(container);\n                self.inputFieldOrganicOrder.push(container);\n                if (field.header.name && field.header.value) {\n                    dataStub[field.header.name] = field.header.value;\n                    self.initializingFields[organicFieldIndex] = field;\n                    field.component.addEventListener('initialized', initialized);\n                    field.component.value = dataStub;\n                }\n            });\n            updateFlexOrder();\n        }\n        function addComponents(obj) {\n            if (!obj) { return; }\n            if (typeof obj !== 'object') { throw new TypeError('Component object must be an object'); }\n            Object.keys(obj).forEach(function (type) {\n                self.components[type] = obj[type];\n            });\n        }\n        function initData(newData) {\n            if (!newData) { return; }\n            if (!self.initialized || self.initializingFields.filter(function (i) { return !!i; }).length > 0) {\n                self.preInitDataSet = newData;\n                return;\n            }\n            // set component values\n            self.fields.forEach(function (field) {\n                field.component.value = newData;\n            });\n        }\n        function disposeFields() {\n            self.fields.forEach(function (field) {\n                if (field && field.component) {\n                    if (field.component.dispose) {\n                        field.component.dispose();\n                    }\n                    if (field.component.parentNode) {\n                        field.component.parentNode.removeChild(field.component);\n                    }\n                    if (field.handle && field.handle.parentNode) {\n                        field.handle.removeEventListener('mousedown', field.handle.beginReorderFieldFunction);\n                        field.handle.parentNode.removeChild(field.handle);\n                    }\n                    if (field.container && field.container.parentNode) {\n                        field.container.parentNode.removeChild(field.container);\n                    }\n                }\n            });\n        }\n        function dispose() {\n            disposeFields();\n        }\n        function initSchema() {\n            if (!self.initialized) { return; }\n            if (!self.schema) { return; }\n            if (self.fields) {\n                // dispose previous items\n                disposeFields();\n            }\n            self.idCounter = -1;\n            self.fields = [];\n            self.schema.forEach(function (header, index) {\n                var t = self.components.string,\n                    id = header.name === undefined ? getNewId() : header.name,\n                    component;\n                if (getFieldById(id)) {\n                    throw new Error('Duplicate id in schema ' + id);\n                }\n                if (self.components[header.type]) {\n                    t = self.components[header.type];\n                }\n                component = t.apply(self.intf, [header, index, self]);\n                component.addEventListener('change', function () {\n                    self.intf.dispatchEvent('change', {data: self.data});\n                });\n                self.fields.push({\n                    name: header.name === undefined ? '__' + id : header.name,\n                    id: id,\n                    header: header,\n                    component: component,\n                    index: index\n                });\n            });\n            createDom();\n            initData(self.data);\n        }\n        function dispatchResize() {\n            self.intf.dispatchEvent('resize');\n            requestAnimationFrame(function () {\n                window.dispatchEvent(new Event('resize'));\n            });\n        }\n        function init() {\n            if (!self.initialized) {\n                self.shadowRoot = self.intf.attachShadow ? self.intf.attachShadow({mode: 'open'}) : self.intf;\n                self.shadowRoot.appendChild(self.form);\n                self.inputFieldOrganicOrder = [];\n                if (!self.cssAttached) {\n                    ce('link', self.shadowRoot, {\n                        rel: 'stylesheet',\n                        href: /^file:\\/\\/\\//.test(window.location) ? '../lib/index.css' : 'data:text/css;base64,cssurl-target'\n                    });\n                    self.cssAttached = true;\n                }\n                self.shadowRoot.appendChild(self.form);\n                if (self.intf.mode === 'dialog' || self.intf.dialogOptions !== undefined) {\n                    dialogOptions = self.intf.dialogOptions || {};\n                    dialogOptions.title = self.intf.title;\n                    self.dialog = dialog(dialogOptions);\n                    self.dialog.addEventListener('resized', dispatchResize);\n                    self.dialog.content.appendChild(self.form);\n                    self.shadowRoot.appendChild(self.dialog);\n                    self.dialog.attached = true;\n                }\n                addComponents(defaultComponents);\n                addComponents(self.args.components);\n                self.intf.form = self.form;\n                self.initialized = true;\n            }\n            loadState();\n            initSchema();\n            if (self.dialog) {\n                self.dialog.center();\n            }\n        }\n        function dataSetter(value) {\n            if (!self.schema) {\n                self.data = value;\n                return;\n            }\n            initData(value);\n        }\n        function dataGetter() {\n            var d = self.data || {};\n            self.fields.forEach(function (field) {\n                var cValue = {};\n                if (field.component.isContainer) {\n                    Object.assign(d, field.component.value);\n                } else {\n                    cValue[field.header.name] = field.component.value;\n                    Object.assign(d, cValue);\n                }\n            });\n            return d;\n        }\n        function schemaSetter(value) {\n            self.schema = value;\n            initSchema();\n        }\n        function addComponent(name, compProc) {\n            if (typeof name !== 'string') { throw new TypeError('Argument 0, name, must be a string.'); }\n            if (typeof compProc !== 'string') { throw new TypeError('Argument 1, component procedure, must be a function that returns an object.'); }\n            self.componenets[name] = compProc;\n        }\n        // public interface definitions\n        self.intf.init = init;\n        self.intf.dispose = dispose;\n        self.intf.isContainer = true;\n        self.intf.addComponents = addComponents;\n        self.intf.addComponent = addComponent;\n        self.intf.getFieldByName = getFieldByName;\n        self.intf.getFieldById = getFieldById;\n        self.intf.getFieldsByPropertyValue = getFieldsByPropertyValue;\n        Object.defineProperty(self.intf, 'fields', {\n            get: function () {\n                return self.fields;\n            }\n        });\n        Object.defineProperty(self.intf, 'isValid', {\n            get: function () {\n                return false;\n            }\n        });\n        Object.defineProperty(self.intf, 'components', {\n            get: function () {\n                return self.components;\n            }\n        });\n        Object.defineProperty(self.intf, 'data', {\n            get: dataGetter,\n            set: dataSetter\n        });\n        Object.defineProperty(self.intf, 'dialogOptions', {\n            get: function () {\n                return self.dialogOptions;\n            },\n            set: function (value) {\n                self.dialogOptions = value;\n            }\n        });\n        Object.defineProperty(self.intf, 'mode', {\n            get: function () {\n                return self.mode;\n            },\n            set: function (value) {\n                if (value === 'dialog') {\n                    self.mode = 'dialog';\n                } else {\n                    self.mode = 'block';\n                }\n                if (self.mode === 'dialog') {\n                    if (self.dialog && self.dialog.dispose) {\n                        self.dialog.dispose();\n                    }\n                    self.dialog = dialog(self.dialogOptions);\n                    self.dialog.title.innerHTML = self.title;\n                    self.dialog.content.appendChild(self.form);\n                    self.intf.appendChild(self.dialog);\n                    self.dialog.attached = true;\n                    requestAnimationFrame(function () {\n                        self.dialog.center();\n                    });\n                } else {\n                    if (self.dialog) {\n                        self.dialog.attached = false;\n                    }\n                    self.intf.appendChild(self.form);\n                }\n            }\n        });\n        Object.defineProperty(self.intf, 'title', {\n            get: function () {\n                return self.title;\n            },\n            set: function (value) {\n                self.title = value;\n                if (self.dialog) {\n                    self.dialog.title.innerHTML = value;\n                }\n            }\n        });\n        Object.defineProperty(self.intf, 'dialog', {\n            get: function () {\n                return self.dialog;\n            }\n        });\n        Object.defineProperty(self.intf, 'schema', {\n            get: function () {\n                return self.schema;\n            },\n            set: schemaSetter\n        });\n        Object.defineProperty(self.intf, 'name', {\n            get: function () {\n                return self.name;\n            },\n            set: function (value) {\n                self.name = value;\n                loadState();\n            }\n        });\n        return self.intf;\n    }\n    function connectedCallback(el) {\n        (el || this).init();\n        return;\n    }\n    PivotForm.prototype = Object.create(window.HTMLElement.prototype);\n    if (window.customElements) {\n        PivotForm.prototype.disconnectedCallback = function () {\n            return;\n        };\n        PivotForm.prototype.getObservableAttributes = function () {\n            return attributeList;\n        };\n        PivotForm.prototype.connectedCallback = connectedCallback;\n        PivotForm.prototype.adoptedCallback = function () {\n            return;\n        };\n        PivotForm.prototype.attributeChangedCallback = function (attrName, oldVal, newVal) {\n            this[attrName] = newVal;\n            return;\n        };\n        window.customElements.define('pivot-form', PivotForm);\n    }\n    function pivotFormFactory(args) {\n        args = args || {};\n        requestAnimationFrame(function () {\n            window.dispatchEvent(new Event('resize'));\n        });\n        if (window.customElements) {\n            return new PivotForm(args);\n        }\n        var f = new PivotForm(args);\n        if (args.parentNode) {\n            args.parentNode.appendChild(f.form);\n        }\n        attributeList.forEach(function (attrKey) {\n            if (args[attrKey]) {\n                f[attrKey] = args[attrKey];\n            }\n        });\n        if (!f.form) {\n            connectedCallback(f);\n        }\n        return f;\n    }\n    window.pivotForm = pivotFormFactory;\n    return pivotFormFactory;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/index.js\n// module id = 1\n// module chunks = 0","/*jslint browser: true, unparam: true, todo: true, evil: true*/\n/*globals define: false, requestAnimationFrame: false, Event: false*/\ndefine(['../util.js'], function (util) {\n    'use strict';\n    var components = {}, ce = util.createElement, sp = util.setProperties;\n    // components that contain other components must be described here because\n    // of the inherit circular reference to the components module\n    function inputComponentFactory(inputOptions) {\n        return function (header, index, form) {\n            var component = ce('div', null, {className: 'component'}),\n                label = ce('div', component, {className: 'label'}),\n                input = ce('input', component, inputOptions);\n            component.containerStyle = {};\n            label.innerHTML = header.title === undefined ? header.name : header.title;\n            component.header = header;\n            component.label = label;\n            component.input = input;\n            input.onchange = function () {\n                form.data[header.name] = input.value;\n            };\n            Object.defineProperty(component, 'value', {\n                get: function () {\n                    return input.value;\n                },\n                set: util.asyncValueSetter({\n                    component: component,\n                    input: input,\n                    label: label,\n                    header: header,\n                    form: form\n                })\n            });\n            util.addEvents(input, header.events);\n            util.addEvents(label, header.labelEvents);\n            util.addEvents(component, header.componentEvents);\n            sp(input.style, header.style);\n            sp(label.style, header.labelStyle);\n            sp(component.style, header.componentStyle);\n            sp(component.containerStyle, header.containerStyle);\n            component.addEventListener = input.addEventListener;\n            component.removeEventListener = input.removeEventListener;\n            return component;\n        };\n    }\n    // html 4 input types\n    ['button', 'checkbox', 'file', 'hidden', 'image', 'password', 'radio', 'reset', 'submit', 'text',\n        // html 5 input types\n        'color', 'date', 'datetime-local', 'email', 'month', 'number', 'range', 'search', 'tel', 'time',\n        'url', 'week'].forEach(function (typeKey) {\n        components[typeKey] = inputComponentFactory({className: 'input', type: typeKey});\n    });\n    components.select = function (header, index, form) {\n        var componentContext = this,\n            component = ce('div', null, {className: 'component'}),\n            label = ce('div', component, {className: 'label'}),\n            input = ce('select', component, {className: 'select'}),\n            fEnumVal,\n            options = [];\n        function fillValue(val) {\n            var cData = {};\n            cData[header.name] = val;\n            util.asyncValueSetter({\n                component: component,\n                input: input,\n                label: label,\n                header: header,\n                form: form\n            })(cData);\n        }\n        function fillOptions(arr) {\n            arr.forEach(function (item) {\n                var option;\n                if (!Array.isArray(item)) { item = [item, item]; }\n                option = ce('option', input, {value: item[0], innerHTML: item[1]});\n                sp(option, header.optionStyle);\n                options.push(option);\n            });\n            fillValue(header.value);\n        }\n        label.innerHTML = header.title === undefined ? header.name : header.title;\n        component.label = label;\n        component.input = input;\n        component.header = header;\n        component.containerStyle = {};\n        util.addEvents(input, header.events);\n        util.addEvents(label, header.labelEvents);\n        util.addEvents(component, header.componentEvents);\n        sp(input.style, header.style);\n        sp(label.style, header.labelStyle);\n        sp(component.style, header.componentStyle);\n        sp(component.containerStyle, header.containerStyle);\n        if (Array.isArray(header.enum)) {\n            fillOptions(header.enum);\n        } else if (typeof header.enum === 'function') {\n            fEnumVal = header.enum.apply(componentContext, [function (value) {\n                if (fEnumVal) { throw new Error('Async return detected from value already set via sync function.'); }\n                fillOptions(value);\n            }]);\n            if (fEnumVal) {\n                fillOptions(fEnumVal);\n            }\n        }\n        input.onchange = function () {\n            form.data[header.name] = input.value;\n        };\n        Object.defineProperty(component, 'value', {\n            get: function () {\n                return input.value;\n            },\n            set: util.asyncValueSetter({\n                component: component,\n                input: input,\n                label: label,\n                header: header,\n                form: form\n            })\n        });\n        component.addEventListener = input.addEventListener;\n        component.removeEventListener = input.removeEventListener;\n        return component;\n    };\n    components.title = function (header, index, form) {\n        var component = ce('div', null, {className: 'component'}),\n            label = ce('div', component, {className: 'label'});\n        label.innerHTML = header.title === undefined ? header.name : header.title;\n        component.containerStyle = {};\n        component.label = label;\n        component.header = header;\n        sp(label.style, header.style);\n        sp(component.style, header.componentStyle);\n        sp(component.containerStyle, header.containerStyle);\n        util.addEvents(label, header.labelEvents);\n        util.addEvents(component, header.componentEvents);\n        Object.defineProperty(component, 'value', {\n            get: function () {\n                return label.innerHTML;\n            },\n            set: util.asyncValueSetter({\n                component: component,\n                label: label,\n                header: header,\n                form: form\n            })\n        });\n        return component;\n    };\n    components.HTMLElement = function (header, index, form) {\n        return ce(header.tagName, null, header);\n    };\n    components.button = function (header, index, form) {\n        return ce('button', null, header);\n    };\n    components.string = components.text;\n    components['canvas-datagrid'] = function (header, index, form) {\n        var pContext = this,\n            component = ce('div', null, {className: 'canvas-datagrid-child'}),\n            grid = window.canvasDatagrid();\n        component.containerStyle = {};\n        component.input = grid;\n        component.header = header;\n        component.appendChild(grid);\n        Object.keys(header).forEach(function (propertyKey) {\n            grid[propertyKey] = header[propertyKey];\n        });\n        sp(grid, header);\n        grid.name = pContext.name ? (pContext.name + '_canvas-datagrid_' + index) : undefined;\n        util.addEvents(grid, header.events);\n        util.addEvents(component, header.componentEvents);\n        sp(component.style, header.componentStyle);\n        sp(component.containerStyle, header.containerStyle);\n        component.resize = function () {\n            grid.resize(true);\n        };\n        function changeEvent() {\n            // break circular refs\n            if (!form.data) { return; }\n            form.data[header.name] = util.jsonCopy(grid.data);\n            component.dispatchEvent(new Event('change'));\n        }\n        grid.addEventListener('datachanged', changeEvent);\n        grid.addEventListener('endedit', changeEvent);\n        Object.defineProperty(grid, 'value', {\n            set: function (value) {\n                grid.data = value;\n            },\n            get: function () {\n                return grid.data;\n            }\n        });\n        Object.defineProperty(component, 'value', {\n            get: function () {\n                return grid.data;\n            },\n            set: util.asyncValueSetter({\n                component: component,\n                input: grid,\n                label: grid.name,\n                header: header,\n                form: form\n            })\n        });\n        return component;\n    };\n    // hierarchical components\n    components['pivot-form'] = function (header, index, form) {\n        var pContext = this,\n            f,\n            name = pContext.name ? (pContext.name + '_pivot-form_' + index) : undefined;\n        f = window.pivotForm();\n        f.containerStyle = {};\n        f.className = 'pivot-form-child';\n        f.name = name;\n        f.schema = header.schema;\n        f.data = form.data;\n        f.addComponents(pContext.components);\n        sp(f.containerStyle, header.containerStyle);\n        sp(f.style, header.style);\n        util.addEvents(f, header.events);\n        Object.defineProperty(f, 'value', {\n            get: function () {\n                return f.data;\n            },\n            set: function (value) {\n                f.data = value;\n            }\n        });\n        return f;\n    };\n    components.tabs = function (header, index, form) {\n        var componentContext = this,\n            tabComponents = [],\n            component = ce('div', null, {className: 'tabbed-component'}),\n            tabs = ce('div', component, {className: 'tabs'}),\n            activeTab,\n            defaultTab = header.defaultTabIndex || 0;\n        component.containerStyle = {};\n        component.isContainer = true;\n        function activateTab(activeTabName) {\n            var activeTabItem = header.tabs[activeTabName];\n            activeTab = activeTabName;\n            Object.keys(header.tabs).forEach(function (tabName) {\n                var tabItem = header.tabs[tabName];\n                tabItem.tab.classList.add('tab-inactive');\n                tabItem.tab.classList.remove('tab-active');\n                tabItem.content.classList.remove('tab-content-active');\n                if (tabItem.content.parentNode) {\n                    tabItem.content.parentNode.removeChild(tabItem.content);\n                }\n            });\n            activeTabItem.tab.classList.add('tab-active');\n            activeTabItem.tab.classList.remove('tab-inactive');\n            activeTabItem.content.classList.add('tab-content-active');\n            component.containerStyle = {\n                width: '100%'\n            };\n            component.appendChild(activeTabItem.content);\n            activeTabItem.resize();\n        }\n        Object.keys(header.tabs).forEach(function (tabName) {\n            var tabItem = header.tabs[tabName];\n            tabItem.components = [];\n            tabItem.tab = ce('div', tabs, {\n                className: 'tab',\n                events: {\n                    click: function (e) {\n                        if (activeTab === tabName) { return; }\n                        activateTab(tabName);\n                    }\n                },\n                innerHTML: tabName\n            });\n            tabItem.content = ce('div', null, { className: 'tab-content' });\n            tabItem.forEach(function (header, index) {\n                var t = components[header.type] || components.string,\n                    subComponent = t.apply(componentContext, [header, index, form]);\n                subComponent.addEventListener('change', function () {\n                    form.intf.dispatchEvent('change', {data: form.data});\n                });\n                tabComponents.push(subComponent);\n                tabItem.components.push(subComponent);\n                tabItem.content.appendChild(subComponent);\n            });\n            tabItem.resize = function () {\n                tabItem.components.forEach(function (subComponent) {\n                    if (subComponent.resize) {\n                        requestAnimationFrame(subComponent.resize);\n                    }\n                });\n            };\n        });\n        component.getFieldsByPropertyValue = function getFieldsByPropertyValue(key, value) {\n            var found = [];\n            tabComponents.forEach(function (field) {\n                if (field.isContainer) {\n                    found = found.concat(field.getFieldsByPropertyValue(key, value));\n                }\n                if (value === field[key] || (field.header && value === field.header[key])) {\n                    found.push(field);\n                }\n            });\n            return found;\n        };\n        component.getFieldByName = function getFieldByName(value) {\n            return component.getFieldsByPropertyValue('name', value)[0];\n        };\n        component.getFieldById = function getFieldById(value) {\n            return component.getFieldsByPropertyValue('id', value)[0];\n        };\n        util.addEventInterface(component, header, index, form);\n        util.addEvents(component, header.events);\n        sp(component.style, header.componentStyle);\n        sp(component.containerStyle, header.containerStyle);\n        Object.keys(header.tabs).forEach(function (tabName, index) {\n            if (defaultTab === index) { return; }\n            requestAnimationFrame(function () { activateTab(tabName); });\n        });\n        requestAnimationFrame(function () { activateTab(Object.keys(header.tabs)[defaultTab]); });\n        Object.defineProperty(component, 'value', {\n            get: function () {\n                var d = {};\n                tabComponents.forEach(function (component) {\n                    var cValue = {};\n                    if (component.isContainer) {\n                        Object.assign(d, component.value);\n                    } else {\n                        cValue[component.header.name] = component.value;\n                        Object.assign(d, cValue);\n                    }\n                });\n                return d;\n            },\n            set: function (value) {\n                tabComponents.forEach(function (component) {\n                    component.value = value;\n                });\n                return;\n            }\n        });\n        return component;\n    };\n    return components;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/components/index.js\n// module id = 2\n// module chunks = 0","/*jslint browser: true, unparam: true, todo: true, evil: true*/\n/*globals define: false, performance: false, Event: false*/\ndefine(['./util.js'], function (util) {\n    'use strict';\n    var ce = util.createElement;\n    function dialogModule(args) {\n        args = args || {};\n        var self = {},\n            intf = ce('div', null, {className: 'dialog'});\n        self.intf = intf;\n        intf.minWidth = 300;\n        intf.minHeight = 27;\n        // a rough area were bandit pixels hang out\n        self.borderZone = 5;\n        intf.attached = false;\n        function resizeMouseHover(ev) {\n            if (self.moving) { return; }\n            if (self.minimized) { return; }\n            if (self.maximized) { return; }\n            self.borderResizeCursor = 'auto';\n            self.borderResizeMode = undefined;\n            var b = self.borderZone,\n                x = ev.layerX,\n                y = ev.layerY,\n                height = intf.offsetHeight,\n                width = intf.offsetWidth,\n                n = y < b,\n                w = x < b,\n                e = x - width + b > 0,\n                s = y - height + b > 0,\n                m = y < self.titleBar.offsetHeight;\n            self.borderResizeMode = {n: n, s: s, e: e, w: w, m: m};\n            if (n && w) {\n                self.borderResizeCursor = 'nwse-resize';\n            } else if (n && e) {\n                self.borderResizeCursor = 'nesw-resize';\n            } else if (s && w) {\n                self.borderResizeCursor = 'nesw-resize';\n            } else if (s && e) {\n                self.borderResizeCursor = 'nwse-resize';\n            } else if (n) {\n                self.borderResizeCursor = 'ns-resize';\n            } else if (s) {\n                self.borderResizeCursor = 'ns-resize';\n            } else if (e) {\n                self.borderResizeCursor = 'ew-resize';\n            } else if (w) {\n                self.borderResizeCursor = 'ew-resize';\n            }\n            intf.style.cursor = self.borderResizeCursor;\n        }\n        function moveResizeDialog(e) {\n            if (self.minimized) { return; }\n            if (self.maximized) { return; }\n            var s = self.startMove,\n                r = self.borderResizeMode,\n                deltaY = (e.clientY -  s.clientY),\n                deltaX = (e.clientX -  s.clientX);\n            intf.classList.add('noselect');\n            if (r.n || r.s || r.e || r.w) {\n                if (r.n) {\n                    intf.style.top = s.offsetTop + deltaY + 'px';\n                    intf.style.height = Math.max(intf.minHeight, s.offsetHeight - deltaY) + 'px';\n                }\n                if (r.s) {\n                    intf.style.height = Math.max(intf.minHeight, s.offsetHeight + deltaY) + 'px';\n                }\n                if (r.w) {\n                    intf.style.left = s.offsetLeft + deltaX + 'px';\n                    intf.style.width = Math.max(intf.minWidth, s.offsetWidth - deltaX) + 'px';\n                }\n                if (r.e) {\n                    intf.style.width = Math.max(intf.minWidth, s.offsetWidth + deltaX) + 'px';\n                }\n                window.dispatchEvent(new Event('resize'));\n            } else if (r.m) {\n                intf.style.top = s.offsetTop + deltaY + 'px';\n                intf.style.left = s.offsetLeft + deltaX + 'px';\n            }\n            e.stopPropagation();\n        }\n        function center(verticalAlso) {\n            intf.style.left = (window.innerWidth / 2) - (self.intf.offsetWidth / 2) + 'px';\n            if (verticalAlso) {\n                intf.style.top = document.scrollingElement.scrollTop + (window.innerHeight / 2) - (self.intf.offsetHeight / 2) + 'px';\n            } else {\n                intf.style.top = document.scrollingElement.scrollTop + 20 + 'px';\n            }\n        }\n        function endMove(e) {\n            self.moving = false;\n            intf.classList.remove('noselect');\n            document.removeEventListener('mouseup', endMove);\n            document.removeEventListener('mousemove', moveResizeDialog);\n        }\n        function beginDialogMove(e) {\n            if (self.minimized) { return; }\n            if (self.maximized) { return; }\n            self.moving = true;\n            self.startMove = {\n                clientX: e.clientX,\n                clientY: e.clientY,\n                offsetWidth: intf.offsetWidth,\n                offsetHeight: intf.offsetHeight,\n                offsetLeft: intf.offsetLeft,\n                offsetTop: intf.offsetTop,\n            };\n            document.addEventListener('mouseup', endMove);\n            document.addEventListener('mousemove', moveResizeDialog);\n        }\n        function resize() {\n            if (self.maximized) {\n                intf.style.width = window.innerWidth + 'px';\n                intf.style.height = window.innerHeight + 'px';\n            }\n        }\n        function dispose() {\n            if (intf.parentNode) {\n                intf.parentNode.removeChild(intf);\n            }\n            window.removeEventListener('resize', resize);\n        }\n        function open() {\n            intf.classList.remove('dialog-closed');\n            window.dispatchEvent(new Event('resize'));\n        }\n        function close() {\n            intf.classList.add('dialog-closed');\n            window.dispatchEvent(new Event('resize'));\n        }\n        function restoreSavedSize() {\n            intf.style.top = self.restoreRect.top + 'px';\n            intf.style.left = self.restoreRect.left + 'px';\n            intf.style.height = self.restoreRect.height + 'px';\n            intf.style.width = self.restoreRect.width + 'px';\n        }\n        function minimize() {\n            self.minimized = !self.minimized;\n            if (self.minimized) {\n                self.restoreRect = intf.getBoundingClientRect();\n                intf.classList.add('dialog-minimized');\n                self.controlBoxMaximize.classList.add('dialog-restore');\n                window.dispatchEvent(new Event('resize'));\n                intf.style.top = '';\n                intf.style.left = '';\n                intf.style.width = '';\n                intf.style.height = '';\n                return;\n            }\n            restoreSavedSize();\n            intf.classList.remove('dialog-minimized');\n            self.controlBoxMaximize.classList.remove('dialog-restore');\n            window.dispatchEvent(new Event('resize'));\n        }\n        function maximize() {\n            self.maximized = !self.maximized;\n            if (self.maximized) {\n                self.restoreRect = intf.getBoundingClientRect();\n                intf.classList.add('dialog-maximized');\n                self.controlBoxMaximize.classList.add('dialog-restore');\n                intf.style.top = '0px';\n                intf.style.left = '0px';\n                intf.style.width = window.innerWidth + 'px';\n                intf.style.height = window.innerHeight + 'px';\n                window.dispatchEvent(new Event('resize'));\n                return;\n            }\n            intf.classList.remove('dialog-maximized');\n            self.controlBoxMaximize.classList.remove('dialog-restore');\n            restoreSavedSize();\n            window.dispatchEvent(new Event('resize'));\n        }\n        function init() {\n            self.modal = ce('div', null, {className: 'dialog-modal'});\n            self.titleBar = ce('div', intf, {className: 'dialog-title-bar'});\n            self.title = ce('span', self.titleBar, {className: 'dialog-title', innerHTML: args.title || '' });\n            self.content = ce('div', intf, {className: 'dialog-content'});\n            self.card = ce('div', null, {className: 'dialog-card'});\n            self.controlBoxMinimize = ce('div', null, {className: 'dialog-minimize'});\n            self.controlBoxMaximize = ce('div', null, {className: 'dialog-maximize'});\n            self.controlBoxClose = ce('div', self.titleBar, {className: 'dialog-close'});\n            self.titleBar.addEventListener('mousedown', beginDialogMove);\n            window.addEventListener('resize', resize);\n            intf.addEventListener('mousedown', beginDialogMove);\n            intf.addEventListener('mousemove', function (e) {\n                resizeMouseHover(e);\n            });\n            // interface\n            intf.content = self.content;\n            intf.card = self.card;\n            intf.titleBar = self.titleBar;\n            Object.defineProperty(intf, 'title', {\n                get: function () {\n                    return self.title;\n                }\n            });\n            intf.controlBoxMinimize = self.controlBoxMinimize;\n            intf.controlBoxMaximize = self.controlBoxMaximize;\n            intf.controlBoxClose = self.controlBoxClose;\n            intf.center = center;\n            Object.defineProperty(intf, 'modal', {\n                get: function (value) {\n                    return self.modal;\n                },\n                set: function (value) {\n                    self.modal = !!value;\n                    if (self.modal) {\n                        document.body.appendChild(self.modal);\n                    } else {\n                        document.body.removeChild(self.modal);\n                    }\n                    window.dispatchEvent(new Event('resize'));\n                }\n            });\n            Object.defineProperty(self.titleBar, 'value', {\n                get: function () {\n                    return self.title.innerHTML;\n                },\n                set: function (value) {\n                    self.card.innerHTML = value;\n                    self.title.innerHTML = value;\n                }\n            });\n            intf.open = open;\n            intf.close = close;\n            intf.dispose = dispose;\n            intf.maximize = maximize;\n            intf.minimize = minimize;\n            intf.maximize = maximize;\n            //self.titleBar.ondblclick = maximize;\n            self.controlBoxClose.onclick = close;\n            self.controlBoxMinimize.onclick = minimize;\n            self.controlBoxMaximize.onclick = maximize;\n        }\n        init();\n        return intf;\n    }\n    return dialogModule;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/dialog.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}